 {
  "props": {
    "empty": "",
    "appendOuterIcon": "Appends an icon to the outside the component's input, uses same syntax as `v-icon`",
    "autoGrow": "Auto-grows the input. This option requires the use of **v-model**",
    "autofocus": "Enables autofocus",
    "filled": "Applies the alternate filled input style",
    "clearIcon": "Applied when using **clearable** and the input is dirty",
    "counter": "Creates counter for input length; if no number is specified, it defaults to 25. Does not apply any validation.",
    "dark": "Components.Inputs.props.dark",
    "flat": "Mixins.Soloable.props.flat",
    "fullWidth": "Designates input type as full-width",
    "multiLine": "Turns into textarea",
    "noResize": "Removes the resize handle, only applies to **multi-line** and **textarea** props",
    "outlined": "Applies the outlined style to the input",
    "placeholder": "Sets the inputâ€™s placeholder text",
    "prefix": "Displays prefix text",
    "prependInnerIcon": "Prepends an icon inside the component's input, uses the same syntax as `v-icon`",
    "reverse": "Reverses the input orientation",
    "rounded": "Adds a border radius to the input",
    "rows": "Controls the number of rows in a textarea",
    "rowHeight": "Designate a custom _row-height_. Used for determining input height when using **multi-line** or **textarea** props",
    "solo": "Mixins.Soloable.props.solo",
    "soloInverted": "Mixins.Soloable.props.soloInverted",
    "suffix": "Displays suffix text",
    "textarea": "Textarea text field with alternate style",
    "toggleKeys": "Array of key codes that will toggle the input (if it supports toggling)",
    "type": "Sets input type",
    "shaped": "Round if `outlined` and increase `border-radius` if `filled`. Must be used with either `outlined` or `filled`"
  },
  "slots": {
    "empty": "",
    "append-outer": "Adds an item outside the input and after input content",
    "prepend-inner": "Adds an item inside the input and before input content"
  },
  "events": {
    "empty": "",
    "blur": "Emitted when the input is blurred",
    "change": "Emitted when the input is changed by user interaction",
    "click:append-outer": "Emitted when appended outer icon is clicked",
    "click:clear": "Emitted when clearable icon clicked",
    "click:prepend-inner": "Emitted when prepended inner icon is clicked",
    "focus": "Emitted when component is focused",
    "keydown": "Emitted when **any** key is pressed"
  },
  "functions": {
    "empty": ""
    // add function lang here
  },
  "sass": {
    "empty": ""
    // add sass lang here
  }
}
