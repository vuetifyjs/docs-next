 {
  "props": {
    "empty": "",
    "attach": "Mixins.Detachable.props.attach",
    "autocomplete": "Filter the items in the list based on user input",
    "cacheItems": "Keeps a local _unique_ copy of all items that have been passed through the **items** prop.",
    "chips": "Changes display of selections to chips",
    "combobox": "The single select variant of **tags**",
    "contentClass": "Mixins.Detachable.props.contentClass",
    "dark": "Components.Inputs.props.dark",
    "debounceSearch": "Debounces the search input value being emitted",
    "deletableChips": "Adds a remove icon to selected chips",
    "disabled": "Disables the input",
    "disableLookup": "Disables keyboard lookup",
    "eager": "Mixins.Bootable.props.eager",
    "editable": " Creates an editable button - [spec](https://material.io/guidelines/components/buttons.html#buttons-dropdown-buttons)",
    "filter": "The function used for filtering items",
    "hideSelected": "Do not display in the select menu items that are already selected",
    "itemColor": "Sets color of selected items",
    "itemDisabled": "Set property of **items**'s disabled value",
    "items": "Can be an array of objects or array of strings. When using objects, will look for a text, value and disabled keys. This can be changed using the **item-text**, **item-value** and **item-disabled** props.  Objects that have a **header** or **divider** property are considered special cases and generate a list header or divider; these items are not selectable.",
    "itemText": "Set property of **items**'s text value",
    "itemValue": "Set property of **items**'s value - **must be primitive**. Dot notation is supported. **Note:** This is currently not supported with `v-combobox` [GitHub Issue](https://github.com/vuetifyjs/vuetify/issues/5479)",
    "menuProps": "Pass props through to the `v-menu` component. Accepts either a string for boolean props `menu-props=\"auto, overflowY\"`, or an object `:menu-props=\"{ auto: true, overflowY: true }\"`",
    "minWidth": "Sets the minimum width of the select's `v-menu` content",
    "multiple": "Changes select to multiple. Accepts array for value",
    "multiLine": "Causes label to float when the select component is focused or dirty",
    "noDataText": "Display text when there is no data",
    "openOnClear": "When using the **clearable** prop, once cleared, the select menu will either open or stay open, depending on the current state",
    "overflow": "Creates an overflow button - [spec](https://material.io/guidelines/components/buttons.html#buttons-dropdown-buttons)",
    "returnObject": "Changes the selection behavior to return the object directly rather than the value specified with **item-value**",
    "searchInput": "Use the **.sync** modifier to catch user input from the search input",
    "segmented": "Creates a segmented button - [spec](https://material.io/guidelines/components/buttons.html#buttons-dropdown-buttons)",
    "smallChips": "Changes display of selections to chips with the **small** property",
    "tags": "Tagging functionality, allows the user to create new values not available from the **items** prop",
    "valueComparator": "The comparison algorithm used for values. [More info](https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts)",
    "value": "Components.Inputs.props.value"
  },
  "slots": {
    "empty": "",
    "append-item": "Adds an item after menu content",
    "item": "Define a custom item appearance",
    "no-data": "Mixins.Filterable.slots.noData",
    "prepend-item": "Adds an item before menu content",
    "selection": "Define a custom selection appearance"
  },
  "events": {
    "empty": "",
    "update:list-index": "Emitted when menu item is selected using keyboard arrows",
    "update:search-input": "The `search-input.sync` event"
  },
  "functions": {
    "empty": ""
    // add function lang here
  },
  "sass": {
    "empty": ""
    // add sass lang here
  }
}
